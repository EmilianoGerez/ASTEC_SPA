function ClientCtrl(e,r,t,n){function i(r,t){e.search.query({id:null,number:r,lastName:t},function(e){o.clientList=e})}var a,o=this;o.clientModel={},o.clientSearch={},o.errorInfo={msg:null,data:null},o.successInfo={msg:null,data:null},o.create=function(r){var t=new e.api(o.clientModel);t.$save(function(e){angular.copy(a,o.clientModel),r.$setPristine(),r.$setUntouched(),o.errorInfo.msg=null,o.successInfo.msg="Cliente creado con exito",o.successInfo.data=e},function(e){o.successInfo.msg=null,o.errorInfo.msg=e.data})},o.search=function(){o.clientSearch.number?(o.searchWord=o.clientSearch.number,i(o.clientSearch.number,"null")):o.clientSearch.lastName&&(o.searchWord=o.clientSearch.lastName,i("null",o.clientSearch.lastName))},o.remove=function(e){var r=t.confirm("Quieres eliminar a "+e.firstName+" "+e.lastName+" ?");r&&(e.$remove(),o.clientList=o.clientList.filter(function(r){return r._id!==e._id}))},o.findOne=function(){e.api.get({id:n.id},function(e){o.clientModel=e})},o.update=function(e){o.clientModel.$update(function(r){e.$setPristine(),e.$setUntouched(),o.errorInfo.msg=null,o.successInfo.msg="Cliente editado con exito",o.successInfo.data=r},function(e){o.successInfo.msg=null,o.errorInfo.msg=e.data})}}function mainCtrl(e,r,t,n,i){var a=this;n.$on("$stateChangeStart",function(){switch(t.$$path){case"/dashboard":a.currentSection="Dashboard";break;case"/clients":a.currentSection="Clientes";break;case"/orders":a.currentSection="Ordenes";break;case"/users":a.currentSection="Usuarios"}}),a.getCurrentUser=function(){a.currentUserData=e.getCurrentUserData()}(),a.logout=function(){a.currentUserData={},e.logout()},a.getOrders=function(){var e=a.currentUserData;a.isAdmin="Admin"==e.role,r.api.query(function(r){a.orders=r.filter(function(r){return a.isAdmin?"Asignada"==r.status:"Asignada"==r.status&&r.tech.id==e._id}),a.ordersComplete=r.filter(function(e){return"Completada"==e.status})})},a.remove=function(e){var r=i.confirm("Quieres eliminar la orden N° #"+e.number+" ?");r&&e.$remove(function(){"Asignada"===e.status?a.orders=a.orders.filter(function(r){return r._id!==e._id}):a.ordersComplete=a.ordersComplete.filter(function(r){return r._id!==e._id})})}}function OrderCtrl(e,r,t,n,i,a){function o(e,t){r.search.query({id:null,number:e,lastName:t},function(e){u.clientList=e})}function s(r,t){e.search.query({id:null,number:r,lastName:t},function(e){u.orderList=e})}var u=this;u.orderModel={},u.orderSearch={},u.errorInfo={msg:null,data:null},u.successInfo={msg:null,data:null},u.solvedOpt=["No","Si"],u.orderStatus=["Cancelada","Asignada","Completada"],u.selectedTech="",u.create=function(r){u.orderModel.client=u.clientData._id,u.orderModel.tech={id:u.selectedTech._id,firstName:u.selectedTech.firstName,lastName:u.selectedTech.lastName};var t=new e.api(u.orderModel);t.$save(function(e){u.orderModel={},u.clientData=null,u.clientSearch={},u.clientList=null,r.$setPristine(),r.$setUntouched(),u.errorInfo.msg=null,u.successInfo.msg="Orden creada con exito",u.successInfo.data=e},function(e){u.successInfo.msg=null,u.errorInfo.msg=e.data})},u.searchClient=function(){u.clientSearch.number?(u.searchWord=u.clientSearch.number,o(u.clientSearch.number,"null")):u.clientSearch.lastName&&(u.searchWord=u.clientSearch.lastName,o("null",u.clientSearch.lastName))},u.searchOrder=function(){u.orderSearch.number?(u.searchWord=u.orderSearch.number,s(u.orderSearch.number,"null")):u.orderSearch.lastName&&(u.searchWord=u.orderSearch.lastName,s("null",u.orderSearch.lastName))},u.remove=function(e){var r=i.confirm("Quieres eliminar la orden N° #"+e.number+" ?");r&&(e.$remove(),u.orderList=u.orderList.filter(function(r){return r._id!==e._id}))},u.findOne=function(r){e.api.get({id:a.id},function(e){u.orderModel=e,r&&(u.selectedTech=u.users.filter(function(e){return e._id===u.orderModel.tech.id}),u.selectedTech=u.selectedTech[0])})},u.update=function(e){u.orderModel.tech={id:u.selectedTech._id,firstName:u.selectedTech.firstName,lastName:u.selectedTech.lastName},u.orderModel.$update(function(r){e.$setPristine(),e.$setUntouched(),u.errorInfo.msg=null,u.successInfo.msg="Orden editada con éxito",u.successInfo.data=r},function(e){u.successInfo.msg=null,u.errorInfo.msg=e.data})},u.getAllUsers=function(){t.api.query(function(e){u.users=e.filter(function(e){return"Tech"===e.role})})}}function dlKeyCode(){return{restrict:"A",link:function(e,r,t){r.bind("keypress",function(r){var n=r.which||r.keyCode;n==t.code&&e.$apply(function(){e.$eval(t.dlKeyCode,{$event:r})})})}}}function UserServ(e,r,t,n){this.getCurrentUserData=function(){var t=e.get("jwt");if(t){var n=r.decodeToken(t);return n}return!1},this.isAdmin=function(){var e=this.getCurrentUserData();return"Admin"==e.role},this.logout=function(){var r=this.getCurrentUserData();n.logout.get({id:r._id},function(){e.remove("jwt"),t.location.href="/"})}}var appConfiguration=function(){var e="main",r=["ngResource","ui.router","angular-jwt","angular-storage","ngMessages"],t=function(r,t){angular.module(r,t||[]),angular.module(e).requires.push(r)};return{appName:e,appDependencies:r,registerModule:t}}();angular.module(appConfiguration.appName,appConfiguration.appDependencies),appConfiguration.registerModule("client"),appConfiguration.registerModule("order"),appConfiguration.registerModule("user"),angular.module("client").config(["$stateProvider",function(e){e.state("clientPanel",{url:"/clients",views:{"private":{templateUrl:"modules/client/views/client-panel.client.view.html"}},data:{requiresLogin:!0,requiresAdmin:!0}}).state("editClient",{url:"/clients/:id/edit",views:{"private":{templateUrl:"modules/client/views/edit-client.client.view.html"}},data:{requiresLogin:!0,requiresAdmin:!0}})}]),angular.module("client").controller("ClientCtrl",["Clients","$http","$window","$stateParams",ClientCtrl]),angular.module("client").factory("Clients",["$resource",function(e){var r=e("api/clients/:id",{id:"@_id"},{update:{method:"PUT"}}),t=e("api/clients/:id/search/:number/:lastName",{id:"@_id",number:"number",lastName:"lastName"});return{api:r,search:t}}]),angular.module("main").config(["$stateProvider","$locationProvider","$urlRouterProvider",function(e,r,t){t.otherwise("/"),e.state("home",{url:"/",views:{"public":{templateUrl:"modules/main/views/home.client.view.html"}},data:{requiresLogin:!1}}).state("dashboard",{url:"/dashboard",views:{"private":{templateUrl:"modules/main/views/dashboard.client.view.html"}},data:{requiresLogin:!0}})}]),angular.module("main").directive("ngEnter",function(){return function(e,r,t){r.bind("keydown keypress",function(r){13===r.which&&(e.$apply(function(){e.$eval(t.ngEnter,{event:r})}),r.preventDefault())})}}),angular.module("main").controller("mainCtrl",["UserServ","Orders","$location","$rootScope","$window",mainCtrl]),angular.module("order").config(["$stateProvider",function(e){e.state("orderPanel",{url:"/orders",views:{"private":{templateUrl:"modules/order/views/order-panel.client.view.html"}},data:{requiresLogin:!0,requiresAdmin:!0}}).state("editorder",{url:"/orders/:id/edit",views:{"private":{templateUrl:"modules/order/views/edit-order.client.view.html"}},data:{requiresLogin:!0}}).state("orderDetail",{url:"/orders/:id",views:{"private":{templateUrl:"modules/order/views/order-detail.client.view.html"}},data:{requiresLogin:!0}})}]),angular.module("order").controller("OrderCtrl",["Orders","Clients","Users","$http","$window","$stateParams",OrderCtrl]),angular.module("order").factory("Orders",["$resource",function(e){var r=e("api/orders/:id",{id:"@_id"},{update:{method:"PUT"}}),t=e("api/orders/:id/search/:number/:lastName",{id:"@_id",number:"number",lastName:"lastName"});return{api:r,search:t}}]),angular.module("order").directive("dlKeyCode",dlKeyCode),angular.module("user").config(["$stateProvider","jwtInterceptorProvider","$httpProvider",function(e,r,t){e.state("signup",{url:"/signup",views:{"public":{templateUrl:"modules/user/views/signup.client.view.html"}},data:{requiresLogin:!1}}).state("signin",{url:"/signin",views:{"public":{templateUrl:"modules/user/views/signin.client.view.html"}},data:{requiresLogin:!1}}).state("userList",{url:"/users",views:{"private":{templateUrl:"modules/user/views/user-list.client.view.html"}},templateUrl:"modules/user/views/user-list.client.view.html",data:{requiresLogin:!0,requiresAdmin:!0}}).state("editUser",{url:"/users/:id/edit",views:{"private":{templateUrl:"modules/user/views/user-edit.client.view.html"}},data:{requiresLogin:!0,requiresAdmin:!0}}),r.tokenGetter=["jwtHelper","$http","store","$state",function(e,r,t,n){var i=t.get("jwt");try{return e.isTokenExpired(i)?r({url:"http://skynetweb.com.ar/api/users/refresh",skipAuthorization:!0,method:"POST",data:{token:i}}).then(function(e){var r=e.data.token;return t.set("jwt",r),r},function(e){return t.remove("jwt"),n.go("signin"),!1}):i}catch(a){return t.remove("jwt"),!1}}],t.interceptors.push("jwtInterceptor")}]).run(["$rootScope","$window","store","$location","UserServ",function(e,r,t,n,i){e.$on("$stateChangeStart",function(e,r){if(r.data&&r.data.requiresLogin){if(!t.get("jwt"))return n.path("/signin");if(r.data.requiresAdmin&&!i.isAdmin())return e.preventDefault(),n.path("/dashboard").replace()}})}]),angular.module("user").controller("UserController",["$window","Users","UserServ","$http","store","jwtHelper","$stateParams","$state",function(e,r,t,n,i,a,o,s){var u=this;u.user={},u.errorInfo={},u.publicSignup=function(){var e=new r.api(u.user);e.$save(function(e){i.set("jwt",e.token),s.go("dashboard")},function(e){u.errorInfo=e.data})},u.signup=function(){u.user.role?(u.user.code="yb9b637i2v",u.user.role="Admin"):(u.user.code="dw77yee18u",u.user.role="Tech");var e=new r.api(u.user);e.$save(function(e){u.users.push(e.data),u.user={}},function(e){u.errorInfo=e.data})},u.signin=function(){var e=new r.signin(u.user);e.$save(function(e){i.set("jwt",e.token),s.go("dashboard")},function(e){u.errorInfo=e.data})},u.getAll=function(){r.api.query(function(e){u.users=e.filter(function(e){return e._id!==u.currentUser._id})})},u.getOne=function(){r.api.get({id:o.id},function(e){u.user=e})},u.getCurrentUser=function(){u.currentUser=t.getCurrentUserData()},u.update=function(){u.user.$update(function(e){s.go("userList")},function(e){u.errorInfo=e.data})},u.remove=function(r){var t=e.confirm("Quieres eliminar el usuario "+r.firstName+" "+r.lastName+" ?");t&&(r.$remove(),u.users=u.users.filter(function(e){return e._id!==r._id}))}}]),angular.module("user").directive("compareTo",[function(){return{require:"ngModel",scope:{otherModelValue:"=compareTo"},link:function(e,r,t,n){n.$validators.compareTo=function(r){return r==e.otherModelValue},e.$watch("otherModelValue",function(){n.$validate()})}}}]),angular.module("user").directive("recordAvailabilityValidator",["$http","Users",function(e,r){return{require:"ngModel",link:function(e,t,n,i){function a(e){i.$setValidity("recordLoading",!e)}function o(e){i.$setValidity("recordAvailable",e)}i.$parsers.push(function(e){if(e&&0!==e.length){a(!0),o(!1);var t=r.search.get({email:e},function(){null===t.data&&(a(!1),o(!0))});return e}})}}}]),angular.module("user").service("UserServ",["store","jwtHelper","$window","Users",UserServ]),angular.module("user").factory("Users",["$resource",function(e){var r=e("api/users/:id",{id:"@_id"},{update:{method:"PUT"}}),t=e("api/users/signin"),n=e("api/users/logout/:id",{id:"@_id"}),i=e("api/users/search/:email",{email:"@email"});return{api:r,signin:t,logout:n,search:i}}]);
//# sourceMappingURL=data:application/json;base64,
